---
import { Picture } from 'astro:assets'
import Icon from 'astro-icon'

// TODO: Replace placeholder images
import imageOne from '../../../assets/1.png'
import imageTwo from '../../../assets/2.png'
import imageThree from '../../../assets/3.png'
import imageFour from '../../../assets/4.png'
import imageFive from '../../../assets/5.png'
import imageSix from '../../../assets/matty.jpg'

const projectData = [
  {
    title: 'Cool Company',
    sub_title: 'Services',
    services: 'Influencer Marketing, Event Activation',
    year: '2023',
    results:
      'Cool Company hired 66th & Brynes to help with their influencer marketing and event activation. We were able to reach 1 million people and increase sales by 20% in the first quarter of 2023.',
    images: [imageOne, imageTwo, imageThree],
  },
  {
    title: 'Hot Company',
    sub_title: 'Services',
    services: 'Marketing Services',
    year: '2023',
    results:
      '66th & Brynes was able to increase sales by 30% in the first quarter of 2023 for Hot Company and we are excited to continue to work with them in the future.',
    images: [imageFour, imageFive, imageSix],
  },
]
---

<section id="projects" class="projects">
  {
    projectData.map((project) => {
      return (
        <div class="project">
          <div class="project-info">
            <h2>{project.title}</h2>
            <h3>Services</h3>
            <p>{project.services}</p>
            <h3>Year</h3>
            <p>{project.year}</p>
            <h3>Results</h3>
            <p>{project.results}</p>
          </div>
          <div class="carousel">
            <div class="carousel-images">
              <Picture src={project.images[0]} alt="" class="image" />
              <Picture src={project.images[1]} alt="" class="image" />
              <Picture src={project.images[2]} alt="" class="image" />
            </div>
            <div class="carousel-navigation">
              <button class="previous">
                <Icon name="chevron-left" />
              </button>
              <button class="next">
                <Icon name="chevron-right" />
              </button>
            </div>
          </div>
        </div>
      )
    })
  }
</section>

<style>
  .projects {
    margin-top: 0;

    .project {
      display: flex;
      flex-direction: column;
      gap: clamp(2rem, 5vh, 3rem);
      margin-bottom: clamp(2rem, 5vh, 3rem);

      .carousel {
        height: 55vh;
      }

      .project-info {
        padding: 2rem;
        overflow: auto;
        background-color: var(--color-green-100);
        border-radius: var(--border-radius-card);

        & > * {
          margin-bottom: 1rem;
        }

        & h2 {
          font-size: clamp(var(--size-base), 7vw, var(--size-lg));
        }

        & h3 {
          font-size: clamp(var(--size-sm), 3vw, var(--size-base));
        }

        & p {
          font-size: var(--size-xs);
        }
      }

      &:nth-of-type(even) .project-info {
        background-color: var(--color-yellow);
      }

      @media (min-width: 1024px) {
        & {
          height: 55vh;
          flex-direction: row;
          justify-content: space-between;
        }

        & .project-info,
        & .carousel {
          /* Fixes uneven columns */
          width: calc(51.5% - clamp(2rem, 5vh, 3rem));
        }

        &:nth-of-type(even) .project-info {
          order: 2;
        }

        &:nth-of-type(even) .carousel {
          order: 1;
        }
      }

      .carousel {
        position: relative;

        & .carousel-images {
          display: flex;
          gap: 1rem;
          height: 100%;
          scroll-behavior: smooth;
          scroll-snap-type: x mandatory;
          user-select: none;
          overflow-x: scroll;
          overflow-y: hidden;
          border-radius: var(--border-radius-card);

          & .image {
            height: 100%;
            width: 400px;
            object-fit: cover;
            scroll-snap-align: center;
            border-radius: var(--border-radius-card);

            @media (min-width: 768px) {
              & {
                width: 500px;
              }
            }
          }

          /* hide Safari + Chrome scroll bar */
          &::-webkit-scrollbar {
            display: none;
          }

          /* hide Firefox scroll bar */
          & {
            scrollbar-width: none;
          }
        }

        & .carousel-navigation {
          display: flex;
          justify-content: space-between;
          align-items: center;

          & button {
            position: absolute;
            bottom: -2%;
            padding: 1rem;
            background-color: var(--color-white-transparent);
            border: 1px solid var(--color-green-200);
            border-radius: 50%;
            box-shadow: var(--box-shadow-normal);
            cursor: pointer;
            transition: all var(--transition-normal);

            @media (min-width: 768px) {
              & {
                top: 50%;
                transform: translateY(-50%);
                bottom: auto;
              }
            }

            &:hover {
              background-color: var(--color-white);
            }

            &.previous {
              left: -2%;
            }

            &.next {
              right: -2%;
            }

            & [astro-icon] {
              height: 1.5rem;
              width: 1.5rem;
            }
          }
        }
      }
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const carousels = document.querySelectorAll('.carousel')

    carousels.forEach((carousel) => {
      const carouselImages = carousel.querySelector('.carousel-images') as HTMLDivElement
      const previousButton = carousel.querySelector('.previous')
      const nextButton = carousel.querySelector('.next')

      /**
       * Handle the next button click event
       */
      function handleNext() {
        carouselImages.scrollLeft += 500

        // Check if user reached the end of the scroll
        const userCompletedScroll =
          carouselImages.scrollLeft >= carouselImages.scrollWidth - carouselImages.clientWidth

        if (userCompletedScroll) {
          carouselImages.scrollLeft = 0
        }
      }

      /**
       * Handle the previous button click event
       */
      function handlePrevious() {
        carouselImages.scrollLeft -= 500

        // Check if user reached the end of the scroll
        const userCompletedScroll = carouselImages.scrollLeft <= 0

        if (userCompletedScroll) {
          carouselImages.scrollLeft = carouselImages.scrollWidth - carouselImages.clientWidth
        }
      }

      previousButton?.addEventListener('click', handlePrevious)
      nextButton?.addEventListener('click', handleNext)
    })
  })
</script>
