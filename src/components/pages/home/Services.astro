---
import TextContent from '../../TextContent.astro'
import InfoCard from '../../InfoCard.astro'
import services from '../../../../public/services.json'
---

<section id="services" class="services site-section">
  <TextContent
    title="Our Services"
    subtitle="Crafting Influence, Curating Events"
    bodyText="Our services range from influencer marketing to event curation. We are a full service agency ready to assist you with any of your marketing needs."
    ctaLink="/services/influencer-strategy"
    ctaText="Learn More"
    class="text-content-custom"
  />

  <div class="service-cards">
    {
      services.map((service) => {
        return (
          <InfoCard
            title={service.title}
            description={service.description}
            icon={service.icon}
            ctaText="Learn More"
            ctaLink={service.url}
            backgroundColor={service.backgroundColor}
          />
        )
      })
    }
  </div>
</section>

<style>
  .services {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--section-spacing-base);
  }

  @media (min-width: 1024px) {
    .services {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .text-content-custom {
      align-items: flex-start;
      text-align: left;
    }
  }

  .service-cards {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    gap: 1rem;
    overflow-y: auto;
    cursor: grab;
    user-select: none;
    border-radius: var(--border-radius-card);

    /* hide Safari + Chrome scroll bar */
    &::-webkit-scrollbar {
      display: none;
    }

    /* hide Firefox scroll bar */
    scrollbar-width: none;
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const serviceCards = document.querySelector('.service-cards') as HTMLElement

    let isDragging = false
    let startX = 0
    let scrollLeft = 0

    serviceCards?.addEventListener('mousedown', (e) => {
      isDragging = true
      startX = e.pageX - serviceCards.offsetLeft
      scrollLeft = serviceCards.scrollLeft
    })

    serviceCards?.addEventListener('mouseleave', () => (isDragging = false))
    serviceCards?.addEventListener('mouseup', () => (isDragging = false))

    serviceCards?.addEventListener('mousemove', (e) => {
      if (!isDragging) return
      e.preventDefault()

      // Move horizontally
      const x = e.pageX - serviceCards.offsetLeft
      const walk = (x - startX) * 2 // Adjust the sensitivity of the drag
      serviceCards.scrollLeft = scrollLeft - walk
    })
  })
</script>
